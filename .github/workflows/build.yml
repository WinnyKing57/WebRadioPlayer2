name: Build APK

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v3

      - name: "⚙️ Install system dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool pkg-config libffi-dev \
            libssl-dev libavcodec-dev libavformat-dev libavdevice-dev \
            libavutil-dev zlib1g-dev zip

      - name: "🐍 Set up Python 3.10"
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: "☕ Set up JDK 17"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: "📲 Set up Android SDK"
        uses: android-actions/setup-android@v3
        with:
          packages: >
            platform-tools
            platforms;android-34
            build-tools;34.0.0
            build-tools;33.0.0

      - name: "✅ Accept Android SDK licenses"
        run: yes | sdkmanager --licenses

      - name: "📦 Install Python dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade buildozer cython python-for-android
          pip uninstall -y ffpyplayer
          pip install git+https://github.com/matham/ffpyplayer.git

      - name: "🚀 Cache Buildozer"
        uses: actions/cache@v3
        with:
          path: ~/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: "🔨 Run initial Buildozer to trigger extraction"
        continue-on-error: true
        run: |
          buildozer android debug

      - name: "🔧 Patch libffi before real build"
        run: |
          echo "⏳ Waiting for libffi to be extracted..."
          while ! find .buildozer/android/platform/build-* -name "configure.ac" 2>/dev/null | grep -q libffi; do
            sleep 2
          done

          echo "✅ Found libffi configure.ac. Patching..."
          find .buildozer/android/platform/build-* -type f -name "configure.ac" -exec grep -l LT_SYS_SYMBOL_USCORE {} \; | while read file; do
            echo "🔧 Patching $file"
            sed -i '1im4_pattern_allow([LT_SYS_SYMBOL_USCORE])' "$file"
          done

      - name: "🔨 Final Build APK"
        run: |
          buildozer -v android debug
          ls -la bin/

      - name: "🗜 Archive APK"
        run: |
          zip -j webradio-apk.zip bin/*.apk

      - name: "☁️ Upload APK Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: webradio-apk
          path: |
            bin/*.apk
            webradio-apk.zip