name: Build APK

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v3

      - name: "⚙️ Install system dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool pkg-config libffi-dev \
            libssl-dev libavcodec-dev libavformat-dev libavdevice-dev \
            libavutil-dev zlib1g-dev zip libsdl2-dev git

      - name: "🐍 Set up Python 3.10"
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: "☕ Set up JDK 17"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: "📲 Set up Android SDK"
        uses: android-actions/setup-android@v3
        with:
          packages: >
            platform-tools
            platforms;android-34
            platforms;android-33
            build-tools;34.0.0
            build-tools;33.0.0
            ndk;25.2.9519653

      - name: "✅ Accept Android SDK licenses"
        run: yes | sdkmanager --licenses

      - name: "📦 Install Python dependencies"
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --upgrade buildozer cython==0.29.36 python-for-android
          pip install git+https://github.com/matham/ffpyplayer.git@master

      - name: "🚀 Cache Buildozer"
        uses: actions/cache@v3
        with:
          path: |
            ~/.buildozer
            ~/.android
            ~/.gradle
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: "🔨 Run Buildozer"
        run: |
          # Set environment variables
          export PATH=$PATH:~/.local/bin
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653
          
          # Clean previous builds
          rm -rf .buildozer/android/platform/build-*/.gradle
          
          # Build with debug output
          buildozer -v android debug 2>&1 | tee build.log
          
          # Save build log
          echo "BUILD_LOG<<EOF" >> $GITHUB_ENV
          cat build.log >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: "📤 Upload build log"
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log

      - name: "🗜 Archive APK"
        if: success()
        run: |
          mkdir -p artifacts
          cp bin/*.apk artifacts/
          zip -j artifacts/webradio-apk.zip bin/*.apk

      - name: "☁️ Upload APK Artifact"
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: webradio-apk
          path: artifacts/*