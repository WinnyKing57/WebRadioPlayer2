name: Build and Release APK

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v3

    - name: ‚öôÔ∏è Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y python3 python3-pip openjdk-11-jdk unzip zip git libgles2-mesa-dev

    - name: üêç Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install buildozer cython

    - name: üì¶ Install Android SDK and accept licenses
      run: |
        mkdir -p "$HOME/android-sdk"
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d "$HOME/android-sdk/"
        mkdir -p "$HOME/android-sdk/cmdline-tools/latest"
        mv "$HOME/android-sdk/cmdline-tools/cmdline-tools"/* "$HOME/android-sdk/cmdline-tools/latest/"
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: üõ†Ô∏è Build APK with Buildozer
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH
        buildozer android debug

    - name: üì§ Create GitHub Release and Upload APK
      uses: ncipollo/release-action@v1
      with:
        tag: v1.${{ github.run_number }}
        name: "WebRadioPy APK Build"
        artifacts: "bin/*.apk"
        token: ${{ secrets.GITHUB_TOKEN }}
